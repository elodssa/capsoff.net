<?php

/**
 * BaseAnswer
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property integer $post_id
 * @property integer $comment_id
 * @property string $text
 * @property integer $comments
 * @property Profile $Profile
 * @property Post $Post
 * @property Answer $Answer
 * @property Doctrine_Collection $Comments
 * 
 * @method integer             getId()         Returns the current record's "id" value
 * @method integer             getUserId()     Returns the current record's "user_id" value
 * @method integer             getPostId()     Returns the current record's "post_id" value
 * @method integer             getCommentId()  Returns the current record's "comment_id" value
 * @method string              getText()       Returns the current record's "text" value
 * @method integer             getComments()   Returns the current record's "comments" value
 * @method Profile             getProfile()    Returns the current record's "Profile" value
 * @method Post                getPost()       Returns the current record's "Post" value
 * @method Answer              getAnswer()     Returns the current record's "Answer" value
 * @method Doctrine_Collection getComments()   Returns the current record's "Comments" collection
 * @method Answer              setId()         Sets the current record's "id" value
 * @method Answer              setUserId()     Sets the current record's "user_id" value
 * @method Answer              setPostId()     Sets the current record's "post_id" value
 * @method Answer              setCommentId()  Sets the current record's "comment_id" value
 * @method Answer              setText()       Sets the current record's "text" value
 * @method Answer              setComments()   Sets the current record's "comments" value
 * @method Answer              setProfile()    Sets the current record's "Profile" value
 * @method Answer              setPost()       Sets the current record's "Post" value
 * @method Answer              setAnswer()     Sets the current record's "Answer" value
 * @method Answer              setComments()   Sets the current record's "Comments" collection
 * 
 * @package    capsoff.net
 * @subpackage model
 * @author     Моисеев Данил
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAnswer extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('answer');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 4,
             ));
        $this->hasColumn('post_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('comment_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 4,
             ));
        $this->hasColumn('text', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4000,
             ));
        $this->hasColumn('comments', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Profile', array(
             'local' => 'user_id',
             'foreign' => 'user_id'));

        $this->hasOne('Post', array(
             'local' => 'post_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Answer', array(
             'local' => 'comment_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Answer as Comments', array(
             'local' => 'id',
             'foreign' => 'comment_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}