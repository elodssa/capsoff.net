CREATE TABLE answer (id INT AUTO_INCREMENT, user_id INT, post_id INT NOT NULL, comment_id INT, text TEXT NOT NULL, comments INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX post_id_idx (post_id), INDEX comment_id_idx (comment_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE category (id INT AUTO_INCREMENT, name VARCHAR(200) NOT NULL, cover VARCHAR(255), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE online_user (user_id INT, PRIMARY KEY(user_id)) ENGINE = INNODB;
CREATE TABLE post (id INT AUTO_INCREMENT, category_id INT NOT NULL, user_id INT, title TEXT NOT NULL, text TEXT NOT NULL, views INT DEFAULT 0 NOT NULL, votes INT DEFAULT 0 NOT NULL, is_show TINYINT(1) DEFAULT '1', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX category_id_idx (category_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE post_tags (id INT AUTO_INCREMENT, post_id INT, tag_id INT, PRIMARY KEY(id, post_id, tag_id)) ENGINE = INNODB;
CREATE TABLE profile (id INT AUTO_INCREMENT, user_id INT NOT NULL, email VARCHAR(80) UNIQUE, gender VARCHAR(16) DEFAULT 'undefined' NOT NULL, fullname VARCHAR(80), avatar VARCHAR(255), know TEXT, want_know TEXT, validate VARCHAR(17), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE tag (id INT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, views INT DEFAULT 0 NOT NULL, posts INT DEFAULT 0 NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_post_voting (id BIGINT AUTO_INCREMENT, user_id INT, post_id INT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id INT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id INT, permission_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id INT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id INT AUTO_INCREMENT, user_id INT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id, ip_address)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id INT AUTO_INCREMENT, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id INT, group_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id INT, permission_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
ALTER TABLE answer ADD CONSTRAINT answer_user_id_profile_user_id FOREIGN KEY (user_id) REFERENCES profile(user_id);
ALTER TABLE answer ADD CONSTRAINT answer_post_id_post_id FOREIGN KEY (post_id) REFERENCES post(id) ON DELETE CASCADE;
ALTER TABLE answer ADD CONSTRAINT answer_comment_id_answer_id FOREIGN KEY (comment_id) REFERENCES answer(id) ON DELETE CASCADE;
ALTER TABLE post ADD CONSTRAINT post_user_id_profile_user_id FOREIGN KEY (user_id) REFERENCES profile(user_id);
ALTER TABLE post ADD CONSTRAINT post_category_id_category_id FOREIGN KEY (category_id) REFERENCES category(id);
ALTER TABLE post_tags ADD CONSTRAINT post_tags_tag_id_tag_id FOREIGN KEY (tag_id) REFERENCES tag(id) ON DELETE CASCADE;
ALTER TABLE post_tags ADD CONSTRAINT post_tags_post_id_post_id FOREIGN KEY (post_id) REFERENCES post(id) ON DELETE CASCADE;
ALTER TABLE profile ADD CONSTRAINT profile_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
